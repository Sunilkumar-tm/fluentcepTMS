{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./src/app/folder/tms/tms.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"common-es2015.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map'; \nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/Observable';\nimport { environment } from 'src/environments/environment';\nimport { Storage } from '@ionic/storage';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TmsService {\n  token: string;\n   constructor(private http: HttpClient, private storage: Storage) { }\n\n\n//  getTaskList(userId){\n//    return this.http.get(environment.url + 'task/getmytasks' + '?userid=' + userId, this.httpOptions)\n//    .map(Response =>\n//     {return Response}).catch(this.handleErrors);\n//  }\n \n getTaskList(userId, startDate, endDate){\n  return this.http.get(environment.urlPHP + 'task/getmytasks/' + userId+'/'+startDate+'/'+endDate)\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n}\n\ngetMyTasksList(userId){\n  return this.http.get(environment.urlPHP + 'task/getmytaskslist/' + userId)\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n}\n\n taskDes(id){\n  return this.http.get(environment.urlPHP + 'task/gettaskdetails/'+ id)\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n}\ntaskLoc(id,status) {\n  return this.http.get(environment.urlPHP + 'task/get_tasks/'+ id + '/'+ status)\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n}\n\n updateTaskStatus(id, status){\n  return this.http.get(environment.urlPHP + 'task/updatetaskstatus/' + id + '/'+ status)\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n }\n\n updateEndTaskStatus(id, status, dt){\n  let payload = {\n    \"endTime\": dt,\n    \"stage\":status,\n    \"taskid\":id\n  }\n  return this.http.post(environment.urlPHP + 'task/updateEndtaskstatus/',payload)\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n }\n\n lastTaskStatus(id){\n  return this.http.get(environment.urlPHP + 'task/laststatus/'+ id)\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n }\n\n timeSpent(id){\n  return this.http.get(environment.urlPHP + 'task/gettimespentintask/'+ id)\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n }\n\n getCompanies() {\n  return this.http.get(environment.urlPHP + 'task/get_companies')\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n }\n getTaskname() {\n  return this.http.get(environment.urlPHP + 'task/checkTaskname')\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n }\n\n getProject(id) {\n  return this.http.get(environment.urlPHP + 'task/get_projects/' + id)\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n\n }\n createTask(data) {\n  return this.http.post(environment.urlPHP + 'task/create_task', data)\n  .map(Response =>\n   {return Response}).catch(this.handleErrors);\n }\n \n  private handleErrors (error: Response | any) {\n    console.log(error.error.message);\n    return Observable.throw(error.error.message || 'backend server error');\n  }\n}"],"sourceRoot":"webpack:///"}